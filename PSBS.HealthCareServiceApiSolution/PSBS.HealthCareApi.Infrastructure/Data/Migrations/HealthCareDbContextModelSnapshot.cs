// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSBS.HealthCareApi.Infrastructure.Data;

#nullable disable

namespace PSBS.HealthCareApi.Infrastructure.Data.Migrations
{
    [DbContext(typeof(HealthCareDbContext))]
    partial class HealthCareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.Medicine", b =>
                {
                    b.Property<Guid>("medicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("medicine_id");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("medicineImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("medicine_image");

                    b.Property<string>("medicineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("medicine_name");

                    b.Property<Guid>("treatmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("treatment_id");

                    b.HasKey("medicineId");

                    b.HasIndex("treatmentId");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.PetHealthBook", b =>
                {
                    b.Property<Guid>("healthBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("healthBook_Id");

                    b.Property<Guid>("bookingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("booking_Id");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<Guid>("medicineId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("medicine_id");

                    b.Property<DateTime?>("nextVisitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("nextvisit_Date");

                    b.Property<string>("performBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("perform_By");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<DateTime>("visitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("visit_Date");

                    b.HasKey("healthBookId");

                    b.HasIndex("medicineId")
                        .IsUnique();

                    b.ToTable("PetHealthBook");
                });

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.Treatment", b =>
                {
                    b.Property<Guid>("treatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("treatment_Id");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("treatmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("treatment_Name");

                    b.HasKey("treatmentId");

                    b.ToTable("Treatment");
                });

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.Medicine", b =>
                {
                    b.HasOne("PSBS.HealthCareApi.Domain.Treatment", "Treatment")
                        .WithMany("Medicines")
                        .HasForeignKey("treatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.PetHealthBook", b =>
                {
                    b.HasOne("PSBS.HealthCareApi.Domain.Medicine", "Medicine")
                        .WithOne("PetHealthBook")
                        .HasForeignKey("PSBS.HealthCareApi.Domain.PetHealthBook", "medicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.Medicine", b =>
                {
                    b.Navigation("PetHealthBook");
                });

            modelBuilder.Entity("PSBS.HealthCareApi.Domain.Treatment", b =>
                {
                    b.Navigation("Medicines");
                });
#pragma warning restore 612, 618
        }
    }
}
